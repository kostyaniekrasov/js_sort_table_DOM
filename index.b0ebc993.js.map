{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAQ,EAAM,aAAa,CAAC,SAE5B,EAAY,CAAC,EAEb,EAAY,SAAC,CAAA,CAAa,CAAhC,EACE,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAM,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAExC,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAS,EAAK,QAAQ,CAAC,EAAY,CAAC,WAAW,CAC/C,EAAS,EAAK,QAAQ,CAAC,EAAY,CAAC,WAAW,CAErD,OAAQ,GACN,IAAK,OACL,IAAK,WACH,OAAO,EAAO,aAAa,CAAC,GAAU,CAAS,CAAC,EAAY,AAE9D,KAAK,MACH,MAAQ,AAAA,CAAA,EAAS,CAAA,EAAU,CAAS,CAAC,EAAY,AAEnD,KAAK,SAIH,MAAQ,AAAA,CAAA,AAHQ,WAAW,EAAO,OAAO,CAAC,QAAS,KACnC,WAAW,EAAO,OAAO,CAAC,QAAS,IAEjC,EAAW,CAAS,CAAC,EAAY,AAErD,SACE,OAAO,CACX,CACF,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,EAEA,EAAM,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAAA,CAAI,CAA1C,EACE,EAAG,gBAAgB,CAAC,QAAS,WAC3B,IAAM,EAAS,EAAG,WAAW,AAE7B,CAAA,CAAS,CAAC,EAAM,CAAG,AAAqB,IAArB,CAAS,CAAC,EAAM,CAAS,GAAK,EACjD,EAAU,EAAO,EACnB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tbody = table.querySelector(\"tbody\");\nvar sortOrder = {};\nvar sortTable = function(columnIndex, sortBy) {\n    var rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n    rows.sort(function(row1, row2) {\n        var value1 = row1.children[columnIndex].textContent;\n        var value2 = row2.children[columnIndex].textContent;\n        switch(sortBy){\n            case \"Name\":\n            case \"Position\":\n                return value1.localeCompare(value2) * sortOrder[columnIndex];\n            case \"Age\":\n                return (value1 - value2) * sortOrder[columnIndex];\n            case \"Salary\":\n                var salary1 = parseFloat(value1.replace(/[$,]/g, \"\"));\n                var salary2 = parseFloat(value2.replace(/[$,]/g, \"\"));\n                return (salary1 - salary2) * sortOrder[columnIndex];\n            default:\n                return 0;\n        }\n    });\n    rows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n};\ntable.querySelectorAll(\"th\").forEach(function(th, index) {\n    th.addEventListener(\"click\", function() {\n        var sortBy = th.textContent;\n        sortOrder[index] = sortOrder[index] === 1 ? -1 : 1;\n        sortTable(index, sortBy);\n    });\n});\n\n//# sourceMappingURL=index.b0ebc993.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = table.querySelector('tbody');\n\nconst sortOrder = {};\n\nconst sortTable = (columnIndex, sortBy) => {\n  const rows = [...tbody.querySelectorAll('tr')];\n\n  rows.sort((row1, row2) => {\n    const value1 = row1.children[columnIndex].textContent;\n    const value2 = row2.children[columnIndex].textContent;\n\n    switch (sortBy) {\n      case 'Name':\n      case 'Position':\n        return value1.localeCompare(value2) * sortOrder[columnIndex];\n\n      case 'Age':\n        return (value1 - value2) * sortOrder[columnIndex];\n\n      case 'Salary':\n        const salary1 = parseFloat(value1.replace(/[$,]/g, ''));\n        const salary2 = parseFloat(value2.replace(/[$,]/g, ''));\n\n        return (salary1 - salary2) * sortOrder[columnIndex];\n\n      default:\n        return 0;\n    }\n  });\n\n  rows.forEach((row) => tbody.appendChild(row));\n};\n\ntable.querySelectorAll('th').forEach((th, index) => {\n  th.addEventListener('click', () => {\n    const sortBy = th.textContent;\n\n    sortOrder[index] = sortOrder[index] === 1 ? -1 : 1;\n    sortTable(index, sortBy);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","tbody","sortOrder","sortTable","columnIndex","sortBy","rows","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","row1","row2","value1","children","textContent","value2","localeCompare","salary1","parseFloat","replace","forEach","row","appendChild","th","index","addEventListener"],"version":3,"file":"index.b0ebc993.js.map"}